// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Vehicles.Infrastructure;

#nullable disable

namespace Vehicles.Infrastructure.Migrations
{
    [DbContext(typeof(VehiclesDbContext))]
    [Migration("20250519065216_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Vehicles.Domain.Vehicle.Models.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<int>("MaxSpeed")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Vehicle");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Vehicle");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Vehicles.Domain.Vehicle.Models.Car", b =>
                {
                    b.HasBaseType("Vehicles.Domain.Vehicle.Models.Vehicle");

                    b.Property<int>("Passengers")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Car");
                });

            modelBuilder.Entity("Vehicles.Domain.Vehicle.Models.Motorcycle", b =>
                {
                    b.HasBaseType("Vehicles.Domain.Vehicle.Models.Vehicle");

                    b.Property<bool>("HasSidecar")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("Motorcycle");
                });

            modelBuilder.Entity("Vehicles.Domain.Vehicle.Models.Truck", b =>
                {
                    b.HasBaseType("Vehicles.Domain.Vehicle.Models.Vehicle");

                    b.Property<int>("MaxLoadKg")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Truck");
                });
#pragma warning restore 612, 618
        }
    }
}
